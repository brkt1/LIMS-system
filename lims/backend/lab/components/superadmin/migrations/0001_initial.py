# Generated by Django 5.2.5 on 2025-09-27 13:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('plan_type', models.CharField(choices=[('basic', 'Basic'), ('professional', 'Professional'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10)),
                ('max_users', models.IntegerField()),
                ('features', models.JSONField(default=list, help_text='List of features included in this plan')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'superadmin_billing_plans',
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('status', models.CharField(default='healthy', max_length=20)),
                ('response_time', models.FloatField(default=0.0, help_text='Response time in milliseconds')),
                ('uptime_percentage', models.FloatField(default=100.0)),
                ('last_check', models.DateTimeField(auto_now=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'superadmin_system_health',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255, unique=True)),
                ('domain', models.CharField(help_text='Subdomain for tenant', max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('pending', 'Pending'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('billing_period', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10)),
                ('max_users', models.IntegerField(default=10)),
                ('current_users', models.IntegerField(default=0)),
                ('created_by', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('is_paid', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'superadmin_tenants',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='superadmin.tenant')),
            ],
            options={
                'db_table': 'superadmin_system_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BillingTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('stripe', 'Stripe'), ('other', 'Other')], max_length=20)),
                ('transaction_id', models.CharField(max_length=255, unique=True)),
                ('payment_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('billing_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='superadmin.billingplan')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='superadmin.tenant')),
            ],
            options={
                'db_table': 'superadmin_billing_transactions',
            },
        ),
        migrations.CreateModel(
            name='TenantPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('billing_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='superadmin.billingplan')),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plan', to='superadmin.tenant')),
            ],
            options={
                'db_table': 'superadmin_tenant_plans',
            },
        ),
        migrations.CreateModel(
            name='UsageMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('active_users', models.IntegerField(default=0)),
                ('total_tests', models.IntegerField(default=0)),
                ('total_reports', models.IntegerField(default=0)),
                ('api_calls', models.IntegerField(default=0)),
                ('storage_used', models.BigIntegerField(default=0, help_text='Storage used in bytes')),
                ('bandwidth_used', models.BigIntegerField(default=0, help_text='Bandwidth used in bytes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_metrics', to='superadmin.tenant')),
            ],
            options={
                'db_table': 'superadmin_usage_metrics',
                'unique_together': {('tenant', 'date')},
            },
        ),
    ]
